#http://localhost:809/graphql

"""
Definición de las operaciones de modificación (Mutations) disponibles para Trabajadores.
"""
type Mutation {
    """
    Guarda un nuevo trabajador en la base de datos usando la información proporcionada.
    
    - `trabajadorRequest`: Objeto de entrada con los datos del trabajador a guardar.
    - Retorna el trabajador creado.
    """
    guardarTrabajador(trabajadorRequest: TrabajadorRequest): Trabajador,

    """
    Actualiza un Tabajador existente por su ID con los nuevos datos proporcionados.
    
    - `id`: Identificador del trabajador a actualizar.
    - `trabajadorRequest`: Objeto con los datos actualizados del trabajador.
    - Retorna el trabajador actualizado.
    """
    actualizarTrabajador(id: String, trabajadorRequest: TrabajadorRequest): Trabajador,

    """
    Elimina un trabajador de la base de datos por su ID.
    
    - `id`: Identificador del trabajador a eliminar.
    - Retorna un mensaje (por ejemplo, de confirmación).
    """
    eliminarTrabajador(id: String): String
}

"""
Definición de las consultas (Queries) disponibles para Trabajadores y EquipoDeTrabajo.
"""
type Query {
    """
    Devuelve la lista de todos los Trabajadores disponibles en la base de datos.
    """
    listarTrabajadores: [Trabajador],

    """
    Devuelve un trabajador específico dado su ID.
    
    - `id`: Identificador del trabajador.
    """
    listarTrabajadorPorId(id: String): Trabajador,

    """
    Devuelve la lista de todas las equipos de trabajo registradas.
    """
    listarEquipoDeTrabajo: [EquipoDeTrabajo],

    """
    Devuelve un EquipoDeTrabajo específica dado su ID.
    
    - `id`: Identificador del equipo de trabajo (de tipo Float por compatibilidad con GraphQL).
    """
    listarEquipoDeTrabajoPorId(id: Float): EquipoDeTrabajo
}

"""
Representa un equipo de trabajo con sus atributos y la lista de trabajadores asociados.
"""
type EquipoDeTrabajo {
    id: Float
    nombre: String
    proyecto: String
    lider: String
    fechaCreacion: String
    descripcion: String
    trabajadores: [Trabajador]
}

"""
Representa un trabajador con sus atributos básicos y su relación con un equipo de trabajo.
"""
type Trabajador {
    id: String
    nombre: String
    apellido: String
    rol: String
    email: String
    equipo: EquipoDeTrabajo
}

"""
Entrada para crear o actualizar un trabajador. Contiene los datos necesarios para persistir el trabajador.
"""
input TrabajadorRequest {
    nombre: String
    apellido: String
    rol: String
    email: String
    equipoId: Float
}
